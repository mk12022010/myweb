data %>%
tabyl(attitude_pp) %>% tab_format()
tabyl(data, whether_changes_pp) %>% tab_format()
cat_names = c(levels(data$change_air_pollution))
cat_names
results = data %>% select(change_air_pollution, change_sound_pollution, change_water_pollution, change_soil_degred, change_health_problem, change_biodiversity_loss, impact_economy_livlihood) %>%
summarise_all(summary) %>% t() %>% as.data.frame() %>% rownames_to_column('Aspects')
colnames(results) = c('Aspects', cat_names)
results %>% kable() %>% kable_styling()
tabyl(data$whether_changes_pp_health) %>%
tab_format
vars = c('respiratory_diseases_increase', 'respiratory_diseases_increase', 'waterborne_diseases_increase', 'others_diseases')
categories(vars)
count(data, what_others_diseases) %>% tab_format()
summary(data$changes_air_quality
) %>%
tab_format
# set directory
# setwd("D:/Google Drive/3 Collaborative research/Parvej Professor ESDM/Power Plant/Data analysis")
# read data
data = read_excel('data_dhankhali.xlsx', sheet = 'data', range = 'A1:HL396')
# change all character variable to factor
# remove leading and trailing spaces from all columns
data = data %>%
mutate(across(where(is.character), ~ trimws(.))) %>%
mutate(across(where(is.character), factor))
summary(data$changes_air_quality
) %>%
tab_format
# set directory
# setwd("D:/Google Drive/3 Collaborative research/Parvej Professor ESDM/Power Plant/Data analysis")
# read data
data = read_excel('data_dhankhali.xlsx', sheet = 'data', range = 'A1:HL396')
# change all character variable to factor
# remove leading and trailing spaces from all columns
data = data %>%
mutate(across(where(is.character), ~ trimws(.))) %>%
mutate(across(where(is.character), factor))
# change all character variable to factor
# remove leading and trailing spaces from all columns
data = data %>%
mutate(across(where(is.character), ~ trimws(.))) %>%
mutate(across(where(is.character), factor))
my_summary = function(x) {
if (is.numeric(x)) {
return(c(
Min = min(x, na.rm = TRUE) %>% round(2),
Max = max(x, na.rm = TRUE)%>% round(2),
Median = median(x, na.rm = TRUE)%>% round(2),
Mean = mean(x, na.rm = TRUE)%>% round(2),
SD = sd(x, na.rm = TRUE)%>% round(2)
))
} else {
return(table(x))
}
}
tab_format = function(x) {
x %>%
kable(format = "html", caption = " ") %>%
kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover"), font_size = 12)
}
# Create a summary table for multiple variables
mult_summary = function(var) {
# Convert the var to factor
data[[var]] = as.factor(data[[var]])
# Get the frequency table including NA
tab = table(data[[var]], useNA = "ifany")
# Convert to named vector
vec = as.numeric(tab)
names(vec) = paste0(names(tab))
# Return as one-row data frame
as.data.frame(t(vec)) %>% mutate(Aspect = var, .before = 1)
}
categories = function(var){
results = map_dfr(var, mult_summary)
names(results) = sub("NA", "Not answered", names(results))
tab_format(results)
}
categories_df = function(var){
results = map_dfr(var, mult_summary)
names(results) = sub("NA", "Not answered", names(results))
return(results)
}
tabyl(data$others_changes_safe_water) %>%
tab_format
data %>% tabyl(what_others_changes_safe_water, others_changes_safe_water) %>%
tab_format
tabyl(data, what_others_steps_water_quality_increase) %>%
tab_format
data$steps_surfacewater_quality_increase = factor(data$steps_surfacewater_quality_increase)
summary(data$steps_surfacewater_quality_increase) %>%
tab_format
tabyl(data$rank_air_quality) %>%
tab_format
summary(data$changes_air_quality
) %>%
tab_format
tabyl(data$changes_air_quality
) %>%
tab_format
var = c('smoke_increase', 'bad_smell_increase', 'air_dust_increase', 'respiratory_problem', 'other_changes_air_quality')
categories(var)
with(data, table(what_other_changes_air_quality, other_changes_air_quality)) %>%
tab_format
#| label: setup
#| include: false
#| echo: false
#| warning: false
#| message: false
pacman::p_load(tidyverse, jtools, car, agricolae, readxl, ggpubr, kableExtra, TreeTools, purrr, janitor, survey, likert, plyr)
# set directory
# setwd("D:/Google Drive/3 Collaborative research/Parvej Professor ESDM/Power Plant/Data analysis")
# read data
data = read_excel('data_dhankhali.xlsx', sheet = 'data', range = 'A1:HL396')
# change all character variable to factor
# remove leading and trailing spaces from all columns
data = data %>%
mutate(across(where(is.character), ~ trimws(.))) %>%
mutate(across(where(is.character), factor))
my_summary = function(x) {
if (is.numeric(x)) {
return(c(
Min = min(x, na.rm = TRUE) %>% round(2),
Max = max(x, na.rm = TRUE)%>% round(2),
Median = median(x, na.rm = TRUE)%>% round(2),
Mean = mean(x, na.rm = TRUE)%>% round(2),
SD = sd(x, na.rm = TRUE)%>% round(2)
))
} else {
return(table(x))
}
}
tab_format = function(x) {
x %>%
kable(format = "html", caption = " ") %>%
kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover"), font_size = 12)
}
# Create a summary table for multiple variables
mult_summary = function(var) {
# Convert the var to factor
data[[var]] = as.factor(data[[var]])
# Get the frequency table including NA
tab = table(data[[var]], useNA = "ifany")
# Convert to named vector
vec = as.numeric(tab)
names(vec) = paste0(names(tab))
# Return as one-row data frame
as.data.frame(t(vec)) %>% mutate(Aspect = var, .before = 1)
}
categories = function(var){
results = map_dfr(var, mult_summary)
names(results) = sub("NA", "Not answered", names(results))
tab_format(results)
}
categories_df = function(var){
results = map_dfr(var, mult_summary)
names(results) = sub("NA", "Not answered", names(results))
return(results)
}
# Count frequency of enumerators
# remove leading and training spaces from the values
# add a total row
data %>%
tabyl(enumerator) %>% arrange(desc(n)) %>% tab_format()
my_summary(data$age) %>% tab_format()
data %>%
tabyl(gender) %>% tab_format
data %>%
tabyl(occupation) %>% arrange(desc(n)) %>% tab_format()
data %>%
tabyl(yrs_living) %>% tab_format()
data %>%
tabyl(aware_pp) %>% tab_format()
data %>%
tabyl(attitude_pp) %>% tab_format()
tabyl(data, whether_changes_pp) %>% tab_format()
cat_names = c(levels(data$change_air_pollution))
cat_names
results = data %>% select(change_air_pollution, change_sound_pollution, change_water_pollution, change_soil_degred, change_health_problem, change_biodiversity_loss, impact_economy_livlihood) %>%
summarise_all(summary) %>% t() %>% as.data.frame() %>% rownames_to_column('Aspects')
colnames(results) = c('Aspects', cat_names)
results %>% kable() %>% kable_styling()
tabyl(data$whether_changes_pp_health) %>%
tab_format
vars = c('respiratory_diseases_increase', 'respiratory_diseases_increase', 'waterborne_diseases_increase', 'others_diseases')
categories(vars)
count(data, what_others_diseases) %>% tab_format()
data %>% tabyl(steps_improve_environment_local) %>% arrange(desc(n)) %>% tab_format()
var = data %>% select(climate_resistant_seeds, use_organic_fertilizer, water_conservation_irrigation, learn_new_farming_methods, improve_irrigation_water_mgmt, disaster_protection_measures, pest_disease_control, livestock_healthcare_feed, improve_fish_farming_env, tree_conservation_afforestation, market_access_fair_price, agriculture_credit_support, other_agriculture_improve_steps) %>% names()
categories(var)
#| label: setup
#| include: false
#| echo: false
#| warning: false
#| message: false
pacman::p_load(tidyverse, jtools, car, agricolae, readxl, ggpubr, kableExtra, TreeTools, purrr, janitor, survey, likert, plyr)
# set directory
# setwd("D:/Google Drive/3 Collaborative research/Parvej Professor ESDM/Power Plant/Data analysis")
# read data
data = read_excel('data_dhankhali.xlsx', sheet = 'data', range = 'A1:HL396')
# change all character variable to factor
# remove leading and trailing spaces from all columns
data = data %>%
mutate(across(where(is.character), ~ trimws(.))) %>%
mutate(across(where(is.character), factor))
my_summary = function(x) {
if (is.numeric(x)) {
return(c(
Min = min(x, na.rm = TRUE) %>% round(2),
Max = max(x, na.rm = TRUE)%>% round(2),
Median = median(x, na.rm = TRUE)%>% round(2),
Mean = mean(x, na.rm = TRUE)%>% round(2),
SD = sd(x, na.rm = TRUE)%>% round(2)
))
} else {
return(table(x))
}
}
tab_format = function(x) {
x %>%
kable(format = "html", caption = " ") %>%
kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover"), font_size = 12)
}
# Create a summary table for multiple variables
mult_summary = function(var) {
# Convert the var to factor
data[[var]] = as.factor(data[[var]])
# Get the frequency table including NA
tab = table(data[[var]], useNA = "ifany")
# Convert to named vector
vec = as.numeric(tab)
names(vec) = paste0(names(tab))
# Return as one-row data frame
as.data.frame(t(vec)) %>% mutate(Aspect = var, .before = 1)
}
categories = function(var){
results = map_dfr(var, mult_summary)
names(results) = sub("NA", "Not answered", names(results))
tab_format(results)
}
categories_df = function(var){
results = map_dfr(var, mult_summary)
names(results) = sub("NA", "Not answered", names(results))
return(results)
}
# Count frequency of enumerators
# remove leading and training spaces from the values
# add a total row
data %>%
tabyl(enumerator) %>% arrange(desc(n)) %>% tab_format()
my_summary(data$age) %>% tab_format()
data %>%
tabyl(gender) %>% tab_format
data %>%
tabyl(occupation) %>% arrange(desc(n)) %>% tab_format()
data %>%
tabyl(yrs_living) %>% tab_format()
data %>%
tabyl(aware_pp) %>% tab_format()
data %>%
tabyl(attitude_pp) %>% tab_format()
tabyl(data, whether_changes_pp) %>% tab_format()
cat_names = c(levels(data$change_air_pollution))
cat_names
results = data %>% select(change_air_pollution, change_sound_pollution, change_water_pollution, change_soil_degred, change_health_problem, change_biodiversity_loss, impact_economy_livlihood) %>%
summarise_all(summary) %>% t() %>% as.data.frame() %>% rownames_to_column('Aspects')
colnames(results) = c('Aspects', cat_names)
results %>% kable() %>% kable_styling()
tabyl(data$whether_changes_pp_health) %>%
tab_format
vars = c('respiratory_diseases_increase', 'respiratory_diseases_increase', 'waterborne_diseases_increase', 'others_diseases')
categories(vars)
count(data, what_others_diseases) %>% tab_format()
#| label: setup
#| include: false
#| echo: false
#| warning: false
#| message: false
pacman::p_load(tidyverse, jtools, car, agricolae, readxl, ggpubr, kableExtra, TreeTools, purrr, janitor, survey, likert, plyr)
#| label: setup
#| include: false
#| echo: false
#| warning: false
#| message: false
pacman::p_load(tidyverse, jtools, car, agricolae, readxl, ggpubr, kableExtra, TreeTools, purrr, janitor, survey, likert, plyr)
# set directory
# setwd("D:/Google Drive/3 Collaborative research/Parvej Professor ESDM/Power Plant/Data analysis")
# read data
data = read_excel('data_dhankhali.xlsx', sheet = 'data', range = 'A1:HL396')
# change all character variable to factor
# remove leading and trailing spaces from all columns
data = data %>%
mutate(across(where(is.character), ~ trimws(.))) %>%
mutate(across(where(is.character), factor))
my_summary = function(x) {
if (is.numeric(x)) {
return(c(
Min = min(x, na.rm = TRUE) %>% round(2),
Max = max(x, na.rm = TRUE)%>% round(2),
Median = median(x, na.rm = TRUE)%>% round(2),
Mean = mean(x, na.rm = TRUE)%>% round(2),
SD = sd(x, na.rm = TRUE)%>% round(2)
))
} else {
return(table(x))
}
}
tab_format = function(x) {
x %>%
kable(format = "html", caption = " ") %>%
kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover"), font_size = 12)
}
# Create a summary table for multiple variables
mult_summary = function(var) {
# Convert the var to factor
data[[var]] = as.factor(data[[var]])
# Get the frequency table including NA
tab = table(data[[var]], useNA = "ifany")
# Convert to named vector
vec = as.numeric(tab)
names(vec) = paste0(names(tab))
# Return as one-row data frame
as.data.frame(t(vec)) %>% mutate(Aspect = var, .before = 1)
}
categories = function(var){
results = map_dfr(var, mult_summary)
names(results) = sub("NA", "Not answered", names(results))
tab_format(results)
}
categories_df = function(var){
results = map_dfr(var, mult_summary)
names(results) = sub("NA", "Not answered", names(results))
return(results)
}
# Count frequency of enumerators
# remove leading and training spaces from the values
# add a total row
data %>%
tabyl(enumerator) %>% arrange(desc(n)) %>% tab_format()
my_summary(data$age) %>% tab_format()
data %>%
tabyl(gender) %>% tab_format
data %>%
tabyl(occupation) %>% arrange(desc(n)) %>% tab_format()
data %>%
tabyl(yrs_living) %>% tab_format()
data %>%
tabyl(aware_pp) %>% tab_format()
data %>%
tabyl(attitude_pp) %>% tab_format()
tabyl(data, whether_changes_pp) %>% tab_format()
cat_names = c(levels(data$change_air_pollution))
cat_names
results = data %>% select(change_air_pollution, change_sound_pollution, change_water_pollution, change_soil_degred, change_health_problem, change_biodiversity_loss, impact_economy_livlihood) %>%
summarise_all(summary) %>% t() %>% as.data.frame() %>% rownames_to_column('Aspects')
colnames(results) = c('Aspects', cat_names)
results %>% kable() %>% kable_styling()
tabyl(data$whether_changes_pp_health) %>%
tab_format
vars = c('respiratory_diseases_increase', 'respiratory_diseases_increase', 'waterborne_diseases_increase', 'others_diseases')
categories(vars)
count(data, what_others_diseases) %>% tab_format()
var = c('stop_air_pollution_pp', 'plantation_safe_air', 'awareness_pollution', 'govt_application_control_pollution', 'others_steps_air_quality_increase')
categories(var)
count(data, what_others_steps_air_quality_increase) %>% tab_format
count(data, what_others_steps_air_quality_increase) %>% tab_format
tabyl(data, what_others_steps_air_quality_increase) %>% tab_format
tabyl(data$changes_vegetation) %>% tab_format
count(data, whether_changes_vegetation) %>% tab_format
tabyl(data, whether_changes_vegetation) %>% tab_format
tabyl(data$changes_birds) %>% tab_format
var = c('birds_freq_decrease', 'birds_species_difference', 'birds_species_extinct', 'others_changes_birds')
categories(var)
data %>% tabyl(what_others_changes_birds, others_changes_birds) %>% tab_format
tabyl(data$changes_wild_animals) %>% tab_format
var = c('changes_wild_animals_decrease', 'wild_animals_species_extinct', 'others_changes_wild_animals')
categories(var)
data %>% tabyl(what_others_changes_wild_animals, others_changes_wild_animals) %>% tab_format
var = c('plantation_wild_animals_conservation',	'stop_hunting_wild_animals_conservation',	'water_source_conserve_wild_animals',	'govt_law_wild_animals',	'others_steps_wild_animals_conservation')
categories(var)
data %>% tabyl(what_others_steps_wild_animals_conservation) %>% tab_format
tabyl(data$soil_quality_change) %>% tab_format
var = data %>% select(dry_soil, crack_soil, hard_soil, soil_erosion, other_soil_quality_change) %>% names()
categories(var)
data %>% tabyl(what_other_soil_quality_change, other_soil_quality_change) %>% tab_format
tabyl(data$soil_color_change) %>% tab_format
var = data %>% select(soil_color_faded, soil_color_darker, others_soil_color_change) %>% names()
categories(var)
data %>% tabyl(what_others_soil_color_change, others_soil_color_change) %>% tab_format
var = data %>% select(Plantation_soil_conservation, modern_agri_practice_soil_conservation, organic_fertilizer_soil_conservation, govt_support_soil_conservation, others_steps_soil_conservation) %>% names()
categories(var)
data %>% tabyl(what_others_steps_soil_conservation, others_steps_soil_conservation) %>% tab_format
tabyl(data$whether_livlihood_change_pp) %>% tab_format
data %>% tabyl(what_livlihood_change_pp) %>% arrange(desc(n)) %>% tab_format
tabyl(data$whether_alternative_power_production) %>% tab_format
data %>% tabyl(what_alternative_power_production) %>% arrange(desc(n)) %>% tab_format
var = data %>% select(alternative_power_use_homestead, alternative_power_use_agriculture, alternative_power_use_safe_water, alternative_power_use_business, alternative_power_use_others) %>% names()
categories(var)
data %>% tabyl(what_alternative_power_use_others) %>% tab_format
var = c('aware_renewable_energy', 'interest_renewable_energy')
categories(var)
tabyl(data$weather_change_observed) %>% tab_format
var = data %>% select(flood_increase, drought_storm_increase, other_weather_changes) %>% names()
categories(var)
data %>% tabyl(what_other_weather_changes, other_weather_changes) %>% tab_format
tabyl(data$temperature_change_observed) %>% tab_format
var = data %>% select(temp_hotter, temp_cooler, temp_more_extreme, other_temp_change) %>% names()
categories(var)
data %>% tabyl(what_other_temp_change, other_temp_change) %>% tab_format
var = data %>% select(flood_drainage_improvement, drought_water_conservation, storm_resistant_housing, govt_support_climate_adaptation, other_climate_adaptation_steps) %>% names()
categories(var)
data %>% tabyl(what_other_climate_adaptation_steps, other_climate_adaptation_steps) %>% tab_format()
tabyl(data, crop_change_observed) %>% tab_format
var = data %>% select(crop_yield_decreased, crop_growth_delay, crop_growth_stopped, new_crops_introduced, other_crop_changes) %>% names()
categories(var)
data %>% tabyl(what_other_crop_changes, other_crop_changes) %>% tab_format()
tabyl(data$crop_type_change) %>% tab_format
tabyl(data$what_crop_type_change) %>% tab_format
tabyl(data$fish_change_observed) %>% tab_format
var = data %>% select(fish_yield_decreased, fish_size_growth_slow, local_fish_extinct, fish_breeding_change, other_fish_changes) %>% names()
categories(var)
data %>% tabyl(what_other_fish_changes, other_fish_changes) %>% tab_format()
tabyl(data, fish_farming_change) %>% tab_format()
tabyl(data, what_fish_farming_change) %>% tab_format
tabyl(data, livestock_change_observed) %>% tab_format()
var = data %>% select(livestock_yield_decreased, livestock_number_decreased, livestock_species_change, other_livestock_changes) %>% names()
categories(var)
data %>% tabyl(what_other_livestock_changes, other_livestock_changes) %>% tab_format()
tabyl(data, livestock_farming_change) %>% tab_format()
tabyl(data, what_livestock_farming_change) %>% tab_format()
tabyl(data, vegetation_change_observed) %>% tab_format()
var = data %>% select(vegetation_number_decreased, vegetation_yield_decreased, vegetation_growth_slow, local_plant_species_extinct, other_vegetation_changes) %>% names()
categories(var)
data %>% tabyl(what_other_vegetation_changes, other_vegetation_changes) %>% tab_format()
tabyl(data, vegetation_planting_pattern_change) %>% tab_format
tabyl(data, what_vegetation_pattern_change) %>% tab_format
var = data %>% select(climate_resistant_seeds, use_organic_fertilizer, water_conservation_irrigation, learn_new_farming_methods, improve_irrigation_water_mgmt, disaster_protection_measures, pest_disease_control, livestock_healthcare_feed, improve_fish_farming_env, tree_conservation_afforestation, market_access_fair_price, agriculture_credit_support, other_agriculture_improve_steps) %>% names()
categories(var)
data %>% tabyl(what_other_agriculture_steps) %>% tab_format()
data %>% tabyl(steps_improve_environment_local) %>% arrange(desc(n)) %>% tab_format()
tabyl(data, what_others_diseases) %>% tab_format()
tabyle(data$whether_changes_pp_safe_water) %>%
tab_format
tabyl(data$whether_changes_pp_safe_water) %>%
tab_format
install.packages("webshot2")
#| label: setup
#| include: false
#| echo: false
#| warning: false
#| message: false
pacman::p_load(tidyverse, jtools, car, agricolae, readxl, ggpubr, kableExtra, TreeTools, purrr, janitor, survey, likert, plyr)
webshot2::install_phantomjs()
#| label: setup
#| include: false
#| echo: false
#| warning: false
#| message: false
pacman::p_load(tidyverse, jtools, car, agricolae, readxl, ggpubr, kableExtra, TreeTools, purrr, janitor, survey, likert, plyr)
webshot2::install_phantomjs()
install.packages("webshot2")
#| label: setup
#| include: false
#| echo: false
#| warning: false
#| message: false
pacman::p_load(tidyverse, jtools, car, agricolae, readxl, ggpubr, kableExtra, TreeTools, purrr, janitor, survey, likert, plyr)
webshot2::install_phantomjs()
#| label: setup
#| include: false
#| echo: false
#| warning: false
#| message: false
pacman::p_load(tidyverse, jtools, car, agricolae, readxl, ggpubr, kableExtra, TreeTools, purrr, janitor, survey, likert, plyr)
webshot::install_phantomjs()
#| label: setup
#| include: false
#| echo: false
#| warning: false
#| message: false
pacman::p_load(tidyverse, jtools, car, agricolae, readxl, ggpubr, kableExtra, TreeTools, purrr, janitor, survey, likert, plyr)
webshot::install_phantomjs()
#| label: setup
#| include: false
#| echo: false
#| warning: false
#| message: false
pacman::p_load(tidyverse, jtools, car, agricolae, readxl, ggpubr, kableExtra, TreeTools, purrr, janitor, survey, likert, plyr)
knitr::opts_chunk$set(
echo = FALSE,
warning = FALSE,
message = FALSE
)
install.packages("ggvenn")
# Render and view presentation
if (interactive()) {
quarto::quarto_preview()
}
library(ggvenn)
# Example sets
A <- 1:5
B <- 4:10
C <- c(2,5,8)
x <- list(A=A, B=B, C=C)
ggvenn(x, fill_color = c("skyblue", "pink", "lightgreen"))
library(ggvenn)
# Example sets
A <- "Research"
B <- 4:10
C <- c(2,5,8)
x <- list(A=A, B=B, C=C)
ggvenn(x, fill_color = c("skyblue", "pink", "lightgreen"))
